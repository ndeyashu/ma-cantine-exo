# Generated by Django 4.2.1 on 2023-05-30 14:27

import data.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("data", "0113_historicalcanteen_claimed_by_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalDiagnostic",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                (
                    "diagnostic_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SIMPLE", "Télédeclaration simple"),
                            ("COMPLETE", "Télédeclaration complète"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Type de diagnostic (simplifié, complet)",
                    ),
                ),
                (
                    "central_kitchen_diagnostic_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "APPRO",
                                "Ce diagnostic concerne les données d'approvisionnement de toutes les cantines satellites",
                            ),
                            (
                                "ALL",
                                "Ce diagnostic concerne toutes les données des cantines satellites",
                            ),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="seulement pertinent pour les cuisines centrales : Quelles données sont déclarées par cette cuisine centrale ?",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(blank=True, null=True, verbose_name="année"),
                ),
                (
                    "value_bio_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Bio - Valeur annuelle HT",
                    ),
                ),
                (
                    "value_fair_trade_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Commerce équitable - Valeur annuelle HT",
                    ),
                ),
                (
                    "value_sustainable_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits SIQO (hors bio) - Valeur annuelle HT",
                    ),
                ),
                (
                    "value_pat_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits dans le cadre de Projects Alimentaires Territoriaux - Valeur annuelle HT",
                    ),
                ),
                (
                    "value_total_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale annuelle HT",
                    ),
                ),
                (
                    "value_externality_performance_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) prenant en compte les coûts imputés aux externalités environnementales ou leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_egalim_others_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) des autres achats EGAlim",
                    ),
                ),
                (
                    "value_meat_poultry_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées",
                    ),
                ),
                (
                    "value_meat_poultry_egalim_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées EGAlim",
                    ),
                ),
                (
                    "value_meat_poultry_france_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) viandes et volailles fraiches ou surgelées provenance France",
                    ),
                ),
                (
                    "value_fish_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) poissons et produits aquatiques",
                    ),
                ),
                (
                    "value_fish_egalim_ht",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur totale (HT) poissons et produits aquatiques EGAlim",
                    ),
                ),
                (
                    "value_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur label rouge",
                    ),
                ),
                (
                    "value_label_aoc_igp",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur label AOC/AOP/IGP",
                    ),
                ),
                (
                    "value_label_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Valeur label HVE",
                    ),
                ),
                (
                    "has_waste_diagnostic",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="diagnostic sur le gaspillage réalisé",
                    ),
                ),
                (
                    "has_waste_plan",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="plan d'action contre le gaspillage en place",
                    ),
                ),
                (
                    "waste_actions",
                    data.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                (
                                    "INSCRIPTION",
                                    "Pré-inscription des convives obligatoire",
                                ),
                                (
                                    "AWARENESS",
                                    "Sensibilisation par affichage ou autre média",
                                ),
                                (
                                    "TRAINING",
                                    "Formation / information du personnel de restauration",
                                ),
                                (
                                    "DISTRIBUTION",
                                    "Réorganisation de la distribution des composantes du repas",
                                ),
                                (
                                    "PORTIONS",
                                    "Choix des portions (grande faim, petite faim)",
                                ),
                                (
                                    "REUSE",
                                    "Réutilisation des restes de préparation / surplus",
                                ),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="actions contre le gaspillage en place",
                    ),
                ),
                (
                    "other_waste_action",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="autre action contre le gaspillage alimentaire",
                    ),
                ),
                (
                    "has_donation_agreement",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="propose des dons alimentaires",
                    ),
                ),
                (
                    "has_waste_measures",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="réalise des mesures de gaspillage alimentaire",
                    ),
                ),
                (
                    "bread_leftovers",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="reste de pain kg/an",
                    ),
                ),
                (
                    "served_leftovers",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="reste plateau kg/an",
                    ),
                ),
                (
                    "unserved_leftovers",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="reste en production (non servi) kg/an",
                    ),
                ),
                (
                    "side_leftovers",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="reste de composantes kg/an",
                    ),
                ),
                (
                    "donation_frequency",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="fréquence de dons dons/an"
                    ),
                ),
                (
                    "donation_quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="quantité des denrées données kg/an",
                    ),
                ),
                (
                    "donation_food_type",
                    models.TextField(
                        blank=True, null=True, verbose_name="type de denrées données"
                    ),
                ),
                (
                    "other_waste_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="autres commentaires (gaspillage)",
                    ),
                ),
                (
                    "has_diversification_plan",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="plan de diversification en place",
                    ),
                ),
                (
                    "diversification_plan_actions",
                    data.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                (
                                    "PRODUCTS",
                                    "Agir sur les plats et les produits (diversification, gestion des quantités, recette traditionnelle, gout...)",
                                ),
                                (
                                    "PRESENTATION",
                                    "Agir sur la manière dont les aliments sont présentés aux convives (visuellement attrayants)",
                                ),
                                (
                                    "MENU",
                                    "Agir sur la manière dont les menus sont conçus ces plats en soulignant leurs attributs positifs",
                                ),
                                (
                                    "PROMOTION",
                                    "Agir sur la mise en avant des produits (plats recommandés, dégustation, mode de production...)",
                                ),
                                (
                                    "TRAINING",
                                    "Agir sur la formation du personnel, la sensibilisation des convives, l’investissement dans de nouveaux équipements de cuisine...",
                                ),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="actions inclus dans le plan de diversification des protéines",
                    ),
                ),
                (
                    "vegetarian_weekly_recurrence",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOW", "Moins d'une fois par semaine"),
                            ("MID", "Une fois par semaine"),
                            ("HIGH", "Plus d'une fois par semaine"),
                            ("DAILY", "De façon quotidienne"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Menus végétariens par semaine",
                    ),
                ),
                (
                    "vegetarian_menu_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNIQUE", "Un menu végétarien en plat unique, sans choix"),
                            (
                                "SEVERAL",
                                "Un menu végétarien composé de plusieurs choix de plats végétariens",
                            ),
                            (
                                "ALTERNATIVES",
                                "Un menu végétarien au choix, en plus d'autres plats non végétariens",
                            ),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Menu végétarien proposé",
                    ),
                ),
                (
                    "vegetarian_menu_bases",
                    data.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                (
                                    "GRAIN",
                                    "De céréales et/ou les légumes secs (hors soja)",
                                ),
                                ("SOY", "De soja"),
                                ("CHEESE", "De fromage"),
                                ("EGG", "D’œufs"),
                                ("READYMADE", "Plats prêts à l'emploi"),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="bases de menu végétarien",
                    ),
                ),
                (
                    "cooking_plastic_substituted",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="contenants de cuisson en plastique remplacés",
                    ),
                ),
                (
                    "serving_plastic_substituted",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="contenants de service en plastique remplacés",
                    ),
                ),
                (
                    "plastic_bottles_substituted",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="bouteilles en plastique remplacées",
                    ),
                ),
                (
                    "plastic_tableware_substituted",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="ustensils en plastique remplacés",
                    ),
                ),
                (
                    "communication_supports",
                    data.fields.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                (
                                    "EMAIL",
                                    "Envoi d'e-mail aux convives ou à leurs représentants",
                                ),
                                (
                                    "DISPLAY",
                                    "Par affichage sur le lieu de restauration",
                                ),
                                (
                                    "WEBSITE",
                                    "Sur site internet ou intranet (mairie, cantine)",
                                ),
                                (
                                    "OTHER",
                                    "Autres moyens d'affichage et de communication électronique",
                                ),
                                ("DIGITAL", "Par voie électronique"),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Communication utilisée",
                    ),
                ),
                (
                    "other_communication_support",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="autre communication utilisée",
                    ),
                ),
                (
                    "communication_support_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Lien de communication"
                    ),
                ),
                (
                    "communicates_on_food_plan",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Communique sur le plan alimentaire",
                    ),
                ),
                (
                    "communicates_on_food_quality",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Communique sur les démarches qualité/durables/équitables",
                    ),
                ),
                (
                    "communication_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("REGULARLY", "Régulièrement au cours de l’année"),
                            ("YEARLY", "Une fois par an"),
                            ("LESS_THAN_YEARLY", "Moins d'une fois par an"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="fréquence de communication",
                    ),
                ),
                (
                    "creation_mtm_source",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="mtm_source du lien tracké lors de la création",
                    ),
                ),
                (
                    "creation_mtm_campaign",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="mtm_campaign du lien tracké lors de la création",
                    ),
                ),
                (
                    "creation_mtm_medium",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="mtm_medium du lien tracké lors de la création",
                    ),
                ),
                (
                    "value_viandes_volailles_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Bio",
                    ),
                ),
                (
                    "value_produits_de_la_mer_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Bio",
                    ),
                ),
                (
                    "value_fruits_et_legumes_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Bio",
                    ),
                ),
                (
                    "value_charcuterie_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Bio",
                    ),
                ),
                (
                    "value_produits_laitiers_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Bio",
                    ),
                ),
                (
                    "value_boulangerie_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Bio",
                    ),
                ),
                (
                    "value_boissons_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Bio",
                    ),
                ),
                (
                    "value_autres_bio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Bio",
                    ),
                ),
                (
                    "value_viandes_volailles_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Label rouge",
                    ),
                ),
                (
                    "value_produits_de_la_mer_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Label rouge",
                    ),
                ),
                (
                    "value_fruits_et_legumes_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Label rouge",
                    ),
                ),
                (
                    "value_charcuterie_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Label rouge",
                    ),
                ),
                (
                    "value_produits_laitiers_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Label rouge",
                    ),
                ),
                (
                    "value_boulangerie_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Label rouge",
                    ),
                ),
                (
                    "value_boissons_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Label rouge",
                    ),
                ),
                (
                    "value_autres_label_rouge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Label rouge",
                    ),
                ),
                (
                    "value_viandes_volailles_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_produits_de_la_mer_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_fruits_et_legumes_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_charcuterie_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_produits_laitiers_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_boulangerie_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_boissons_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_autres_aocaop_igp_stg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, AOC / AOP / IGP / STG",
                    ),
                ),
                (
                    "value_viandes_volailles_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_produits_de_la_mer_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_fruits_et_legumes_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_charcuterie_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_produits_laitiers_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Haute valeur environnementale",
                    ),
                ),
                (
                    "value_boulangerie_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_boissons_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_autres_hve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Haute valeur environnementale",
                    ),
                ),
                (
                    "value_viandes_volailles_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Pêche durable",
                    ),
                ),
                (
                    "value_produits_de_la_mer_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Pêche durable",
                    ),
                ),
                (
                    "value_fruits_et_legumes_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Pêche durable",
                    ),
                ),
                (
                    "value_charcuterie_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Pêche durable",
                    ),
                ),
                (
                    "value_produits_laitiers_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Pêche durable",
                    ),
                ),
                (
                    "value_boulangerie_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Pêche durable",
                    ),
                ),
                (
                    "value_boissons_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Pêche durable",
                    ),
                ),
                (
                    "value_autres_peche_durable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Pêche durable",
                    ),
                ),
                (
                    "value_viandes_volailles_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_produits_de_la_mer_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_fruits_et_legumes_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_charcuterie_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_produits_laitiers_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Région ultrapériphérique",
                    ),
                ),
                (
                    "value_boulangerie_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_boissons_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_autres_rup",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Région ultrapériphérique",
                    ),
                ),
                (
                    "value_viandes_volailles_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Fermier",
                    ),
                ),
                (
                    "value_produits_de_la_mer_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Fermier",
                    ),
                ),
                (
                    "value_fruits_et_legumes_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Fermier",
                    ),
                ),
                (
                    "value_charcuterie_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Fermier",
                    ),
                ),
                (
                    "value_produits_laitiers_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Fermier",
                    ),
                ),
                (
                    "value_boulangerie_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Fermier",
                    ),
                ),
                (
                    "value_boissons_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Fermier",
                    ),
                ),
                (
                    "value_autres_fermier",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Fermier",
                    ),
                ),
                (
                    "value_viandes_volailles_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_produits_de_la_mer_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_fruits_et_legumes_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_charcuterie_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_produits_laitiers_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_boulangerie_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_boissons_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_autres_externalites",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Produit prenant en compte les coûts imputés aux externalités environnementales pendant son cycle de vie",
                    ),
                ),
                (
                    "value_viandes_volailles_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Commerce équitable",
                    ),
                ),
                (
                    "value_produits_de_la_mer_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Commerce équitable",
                    ),
                ),
                (
                    "value_fruits_et_legumes_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Commerce équitable",
                    ),
                ),
                (
                    "value_charcuterie_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Commerce équitable",
                    ),
                ),
                (
                    "value_produits_laitiers_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Commerce équitable",
                    ),
                ),
                (
                    "value_boulangerie_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Commerce équitable",
                    ),
                ),
                (
                    "value_boissons_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Commerce équitable",
                    ),
                ),
                (
                    "value_autres_commerce_equitable",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Commerce équitable",
                    ),
                ),
                (
                    "value_viandes_volailles_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_produits_de_la_mer_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_fruits_et_legumes_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_charcuterie_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_produits_laitiers_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_boulangerie_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_boissons_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_autres_performance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Produits acquis sur la base de leurs performances en matière environnementale",
                    ),
                ),
                (
                    "value_viandes_volailles_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, non-EGAlim.",
                    ),
                ),
                (
                    "value_produits_de_la_mer_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, non-EGAlim.",
                    ),
                ),
                (
                    "value_fruits_et_legumes_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, non-EGAlim.",
                    ),
                ),
                (
                    "value_charcuterie_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, non-EGAlim.",
                    ),
                ),
                (
                    "value_produits_laitiers_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), non-EGAlim.",
                    ),
                ),
                (
                    "value_boulangerie_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, non-EGAlim.",
                    ),
                ),
                (
                    "value_boissons_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, non-EGAlim.",
                    ),
                ),
                (
                    "value_autres_non_egalim",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, non-EGAlim.",
                    ),
                ),
                (
                    "value_viandes_volailles_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Provenance France",
                    ),
                ),
                (
                    "value_produits_de_la_mer_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Provenance France",
                    ),
                ),
                (
                    "value_fruits_et_legumes_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Provenance France",
                    ),
                ),
                (
                    "value_charcuterie_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Provenance France",
                    ),
                ),
                (
                    "value_produits_laitiers_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Provenance France",
                    ),
                ),
                (
                    "value_boulangerie_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Provenance France",
                    ),
                ),
                (
                    "value_boissons_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Provenance France",
                    ),
                ),
                (
                    "value_autres_france",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Provenance France",
                    ),
                ),
                (
                    "value_viandes_volailles_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Circuit-court",
                    ),
                ),
                (
                    "value_produits_de_la_mer_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Circuit-court",
                    ),
                ),
                (
                    "value_fruits_et_legumes_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Circuit-court",
                    ),
                ),
                (
                    "value_charcuterie_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Circuit-court",
                    ),
                ),
                (
                    "value_produits_laitiers_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Circuit-court",
                    ),
                ),
                (
                    "value_boulangerie_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Circuit-court",
                    ),
                ),
                (
                    "value_boissons_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Circuit-court",
                    ),
                ),
                (
                    "value_autres_short_distribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Circuit-court",
                    ),
                ),
                (
                    "value_viandes_volailles_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Viandes et volailles fraîches et surgelées, Produit local",
                    ),
                ),
                (
                    "value_produits_de_la_mer_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Produits aquatiques frais et surgelés, Produit local",
                    ),
                ),
                (
                    "value_fruits_et_legumes_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Fruits et légumes frais et surgelés, Produit local",
                    ),
                ),
                (
                    "value_charcuterie_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Charcuterie, Produit local",
                    ),
                ),
                (
                    "value_produits_laitiers_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="BOF (Produits laitiers, beurre et œufs), Produit local",
                    ),
                ),
                (
                    "value_boulangerie_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boulangerie/Pâtisserie fraîches, Produit local",
                    ),
                ),
                (
                    "value_boissons_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Boissons, Produit local",
                    ),
                ),
                (
                    "value_autres_local",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Autres produits frais, surgelés et d’épicerie, Produit local",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "canteen",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.canteen",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical diagnostic",
                "verbose_name_plural": "historical diagnostics",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
