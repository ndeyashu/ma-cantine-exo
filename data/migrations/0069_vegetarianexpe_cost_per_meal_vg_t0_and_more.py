# Generated by Django 4.0.4 on 2022-05-10 14:08

import data.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0068_merge_20220506_1535'),
    ]

    operations = [
        migrations.AddField(
            model_name='vegetarianexpe',
            name='cost_per_meal_vg_t0',
            field=models.BooleanField(blank=True, null=True, verbose_name='Le tarif par repas est moins cher pour l’option végétarienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='cost_per_meal_vg_t1',
            field=models.BooleanField(blank=True, null=True, verbose_name='Le tarif par repas est moins cher pour l’option végétarienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='cost_savings_reinvested_t0',
            field=models.BooleanField(blank=True, null=True, verbose_name='Les économies réalisées ont été réinvesties pour augmenter la part de produits durables et de qualité'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='cost_savings_reinvested_t1',
            field=models.BooleanField(blank=True, null=True, verbose_name='Les économies réalisées ont été réinvesties pour augmenter la part de produits durables et de qualité'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='difficulties_daily_option_details_t0',
            field=models.TextField(blank=True, null=True, verbose_name='Precision sur les freins rencontrés à la mise en place de l’option végétarienne quotidienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='difficulties_daily_option_details_t1',
            field=models.TextField(blank=True, null=True, verbose_name='Precision sur les freins rencontrés à la mise en place de l’option végétarienne quotidienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='difficulties_daily_option_t0',
            field=models.CharField(blank=True, choices=[('formation', "Difficultés d'accès à la formation"), ('appro', "Difficultés d'approvisionnement"), ('recipes', 'Manque de recettes'), ('cost', 'Surcoût des produits'), ('clients', 'Réaction des convives'), ('overwork', 'Surcharge de travail pour le personnel'), ('other', 'Autre')], max_length=255, null=True, verbose_name='Principaux freins rencontrés à la mise en place de l’option végétarienne quotidienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='difficulties_daily_option_t1',
            field=models.CharField(blank=True, choices=[('formation', "Difficultés d'accès à la formation"), ('appro', "Difficultés d'approvisionnement"), ('recipes', 'Manque de recettes'), ('cost', 'Surcoût des produits'), ('clients', 'Réaction des convives'), ('overwork', 'Surcharge de travail pour le personnel'), ('other', 'Autre')], max_length=255, null=True, verbose_name='Principaux freins rencontrés à la mise en place de l’option végétarienne quotidienne'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='menu_type_before_xp',
            field=models.CharField(blank=True, choices=[('unique', 'Un menu unique pour tous les convives'), ('multiple', 'Une offre à choix multiples')], max_length=255, null=True, verbose_name='Avant la mise en place de l’expérimentation, mon établissement propose chaque jour :'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='recipe_document_t0',
            field=models.TextField(blank=True, null=True, verbose_name='Livret de recette utilisé'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='recipe_document_t1',
            field=models.TextField(blank=True, null=True, verbose_name='Livret de recette utilisé'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='starch_legume_composition_t0',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Repas à base de féculents, légumes et sauces (sur 20 repas)'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='starch_legume_composition_t1',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Repas à base de féculents, légumes et sauces (sur 20 repas)'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='training_type_t0',
            field=models.TextField(blank=True, null=True, verbose_name='Type de formation'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='training_type_t1',
            field=models.TextField(blank=True, null=True, verbose_name='Type de formation'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='vege_menu_reservation',
            field=models.CharField(blank=True, choices=[('open', 'Est proposée chaque jour aux convives librement'), ('reservation_needed', "Fait l'objet d'une préinscription en amont")], max_length=255, null=True, verbose_name="Concernant l'inscription, l’option végétarienne quotidienne :"),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='vegetarian_cost_qualitative_t0',
            field=models.CharField(blank=True, choices=[('higher', 'Plus que cher que les plats non-végétariens'), ('lower', 'Moins cher que les plats non-végétariens'), ('same', 'Equivalent aux plats non-végétariens')], max_length=255, null=True, verbose_name='En moyenne, ressenti qualitative du coût matière des plats végétariens'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='vegetarian_cost_qualitative_t1',
            field=models.CharField(blank=True, choices=[('higher', 'Plus que cher que les plats non-végétariens'), ('lower', 'Moins cher que les plats non-végétariens'), ('same', 'Equivalent aux plats non-végétariens')], max_length=255, null=True, verbose_name='En moyenne, ressenti qualitative du coût matière des plats végétariens'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='waste_evolution_start_to_date_t0',
            field=models.CharField(blank=True, choices=[('higher', 'Oui, le gaspillage des plats végétariens a augmenté depuis la mise en place'), ('lower', 'Oui, le gaspillage des plats végétariens a diminué depuis la mise en place'), ('same', "Non, le gaspillage des plats végétariens n'a pas évolué")], max_length=255, null=True, verbose_name="Évolution du gaspillage avec l'option végétarienne entre le moment de sa mise en place et aujourd'hui"),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='wholegrain_cereal_percentage_t0',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Parmi les plats à base de céréales, pourcentage des céréales complètes et semi-complètes'),
        ),
        migrations.AddField(
            model_name='vegetarianexpe',
            name='wholegrain_cereal_percentage_t1',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Parmi les plats à base de céréales, pourcentage des céréales complètes et semi-complètes'),
        ),
        migrations.AlterField(
            model_name='diagnostic',
            name='vegetarian_menu_type',
            field=models.CharField(blank=True, choices=[('UNIQUE', 'Un menu végétarien en plat unique, sans choix'), ('SEVERAL', 'Un menu végétarien composé de plusieurs choix de plats végétariens'), ('ALTERNATIVES', "Un menu végétarien au choix, en plus d'autres plats non végétariens")], max_length=255, null=True, verbose_name='Menu végétarien proposé'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='cost_evolution_t0',
            field=models.CharField(blank=True, choices=[('higher', 'Le tarif par repas a augmenté'), ('lower', 'Le tarif par repas a diminué'), ('same', 'Le tarif par repas n’a pas changé')], max_length=255, null=True, verbose_name='Évolution ressentie du coût'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='cost_evolution_t1',
            field=models.CharField(blank=True, choices=[('higher', 'Le tarif par repas a augmenté'), ('lower', 'Le tarif par repas a diminué'), ('same', 'Le tarif par repas n’a pas changé')], max_length=255, null=True, verbose_name='Évolution ressentie du coût'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='satisfaction_guests_reasons_t0',
            field=data.fields.ChoiceArrayField(base_field=models.CharField(choices=[('choice', 'Liberté de choix (régime, culte...)'), ('taste', 'Goût et texture'), ('novelty', 'Nouveauté'), ('variety', 'Variété des recettes'), ('ignorance', 'Méconnaissance'), ('reject', 'Opposition de principe'), ('health', 'Impact sur la santé'), ('environment', "Impact sur l'environnement"), ('digestion', 'Problèmes de digestion')], max_length=255), blank=True, null=True, size=None, verbose_name='Principales raisons évoquées par les convives'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='satisfaction_guests_reasons_t1',
            field=data.fields.ChoiceArrayField(base_field=models.CharField(choices=[('choice', 'Liberté de choix (régime, culte...)'), ('taste', 'Goût et texture'), ('novelty', 'Nouveauté'), ('variety', 'Variété des recettes'), ('ignorance', 'Méconnaissance'), ('reject', 'Opposition de principe'), ('health', 'Impact sur la santé'), ('environment', "Impact sur l'environnement"), ('digestion', 'Problèmes de digestion')], max_length=255), blank=True, null=True, size=None, verbose_name='Principales raisons évoquées par les convives'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='satisfaction_staff_reasons_t0',
            field=data.fields.ChoiceArrayField(base_field=models.CharField(choices=[('choice', 'Liberté de choix (régime, culte...)'), ('taste', 'Goût et texture'), ('novelty', 'Nouveauté'), ('variety', 'Variété des recettes'), ('ignorance', 'Méconnaissance'), ('reject', 'Opposition de principe'), ('health', 'Impact sur la santé'), ('environment', "Impact sur l'environnement"), ('no_equipment', 'Manque de matériel adapté')], max_length=255), blank=True, null=True, size=None, verbose_name='Principales raisons évoquées par le personnel'),
        ),
        migrations.AlterField(
            model_name='vegetarianexpe',
            name='satisfaction_staff_reasons_t1',
            field=data.fields.ChoiceArrayField(base_field=models.CharField(choices=[('choice', 'Liberté de choix (régime, culte...)'), ('taste', 'Goût et texture'), ('novelty', 'Nouveauté'), ('variety', 'Variété des recettes'), ('ignorance', 'Méconnaissance'), ('reject', 'Opposition de principe'), ('health', 'Impact sur la santé'), ('environment', "Impact sur l'environnement"), ('no_equipment', 'Manque de matériel adapté')], max_length=255), blank=True, null=True, size=None, verbose_name='Principales raisons évoquées par le personnel'),
        ),
    ]
